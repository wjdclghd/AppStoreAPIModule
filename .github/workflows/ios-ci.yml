name: iOS AppStoreAPIModule CI/CD Pipeline

on:
  #push:
  #  branches:
  #    - main
  #    - develop
  #    - 'release/release*'
  #    - 'hotfix/hotfix*'
  #    - 'feature/*'
  #pull_request:
  #  branches:
  #    - main
  #    - develop
  #    - 'release/release*'
  #    - 'hotfix/hotfix*'
  #    - 'feature/*'
  workflow_dispatch: {}

jobs:
  AppStoreAPIModule-unit-tests:
    name: AppStoreAPIModule Unit Tests
    runs-on: macos-15
    env:
      FASTLANE_SKIP_CONF_PROMPT: 1
      CI: true

    steps:
      - name: Checkout submodule repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install

      - name: Run AppStoreAPIModule Unit Tests
        run: |
          bundle exec fastlane unit_test
          
      - name: Extract code coverage percentage
        id: coverage
        run: |
          mkdir -p output
          xcresult_path=$(find fastlane/test_output -name "*.xcresult" | head -n 1)
          if [[ -f "$xcresult_path" ]]; then
            coverage=$(xcrun xccov view --report --json "$xcresult_path" | jq  '[.targets[].lineCoverage] | add / length * 100')
            echo "Code Coverage: $coverage%"
            echo "coverage=$coverage" >> $GITHUB_OUTPUT
          else
            echo "No .xcresult file found"
          fi

      - name: Run Danger (non-blocking)
        continue-on-error: true
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.DANGER_GITHUB_API_TOKEN }}
        run: bundle exec danger
        
      #- name: Notify Slack (on failure only)
      #if: failure()
      #uses: 8398a7/action-slack@v3
      #with:
      #  status: ${{ job.status }}
      #  fields: repo,message,commit,author,action,eventName,ref,workflow
      #env:
      #  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
